#!/bin/bash

### BEGIN INIT INFO
# processname:       pushgateway
# Short-Description: Prometheus Pushgateway.
# Description:       The Pushgateway receives alerts from one or more Prometheus servers.
#                    It manages those alerts, including silencing, inhibition, aggregation
#                    and sending out notifications via methods such as email, PagerDuty and HipChat.
#
# chkconfig: 2345 80 80
# pidfile: {{ pid_path }}/pushgateway.pid
#
#
### END INIT INFO

#set -e

# Source function library.
. /etc/init.d/functions


NAME=pushgateway
DESC="Prometheus Pushgateway"
DAEMON={{ pushgateway_daemon_dir }}/pushgateway
USER={{ prometheus_user }}
PID="{{ pid_path }}/pushgateway/$NAME.pid"
LOG="{{ log_path }}/pushgateway/$NAME.log"
CHDIR="{{ pushgateway_db_path }}"
GOSU=/usr/local/bin/gosu

DAEMON_OPTS=""

DAEMON_OPTS="$DAEMON_OPTS --web.listen-address=":{{ pushgateway_port }}" \
--web.telemetry-path="{{ web_telemetry_path }}" \
--persistence.interval={{ persistence_interval }} \
--log.level="{{ log_level }}" \
--log.format="{{ log_format }}""

{% if web_route_prefix %}
DAEMON_OPTS="$DAEMON_OPTS --web.route-prefix="{{ web_route_prefix }}""
{% endif %}

{% if web_route_prefix %}
DAEMON_OPTS="$DAEMON_OPTS --persistence.file="{{ persistence_file }}""
{% endif %}

RETVAL=0


#iptables -D INPUT -p tcp --dport {{ pushgateway_port }} -j ACCEPT
#if [ $? -ne 0 ]; then 
#iptables -A INPUT -p tcp --dport {{ pushgateway_port }} -j ACCEPT
#service iptables save
#fi

# Check if DAEMON binary exist
[ -f $DAEMON ] || exit 0

service_checks() {

  # Prepare directories
  mkdir -p "{{ pid_path }}" "{{ log_path }}" "{{ pushgateway_db_path }}"
  chmod -R 0755 "{{ pid_path }}" "{{ log_path }}" "{{ pushgateway_db_path }}"

  check_alive=`ps axf|grep ${DAEMON} | grep -v grep |wc -l`
  if [ "$check_alive" -ne 0 ]; then
    echo "Service already started; skip..."
    exit 1
  else
    echo "Service was aborted abnormally; clean the PID file and continue..."
    if [ -f "$PID" ]; then
      rm -f "$PID"
    fi
  fi
}

start() {
  service_checks $1
  $GOSU $USER   $DAEMON $DAEMON_OPTS  > $LOG 2>&1  &
  RETVAL=$?
  echo $! > $PID
}

stop() {
  killproc -p $PID -b $DAEMON  $NAME
  if [ -f $PID ]; then
    rm -rf $PID
  fi
  RETVAL=$?
}

reload() {
  killproc -p $PID -b $DAEMON  $NAME -HUP
  RETVAL=$?
}

#chdir $CHDIR

case "$1" in
  start)
    start
    echo -n $"Starting $DESC -" "$NAME" $'\n'
    ;;

  stop)
    echo -n $"Stopping $DESC -" "$NAME" $'\n'
    stop
    ;;

  reload)
    echo -n $"Reloading $DESC configuration -" "$NAME" $'\n'
    reload
    ;;

  restart|force-reload)
    stop
    start
    echo -n $"Restarting $DESC -" "$NAME" $'\n'
    ;;

  syntax)
    $DAEMON --help
    ;;

  status)
    status -p $PID $DAEMON
    ;;

  *)
    echo -n $"Usage: /etc/init.d/$NAME {start|stop|reload|restart|force-reload|syntax|status}" $'\n'
    ;;
esac

exit $RETVAL
