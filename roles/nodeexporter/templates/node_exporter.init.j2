#!/bin/bash

### BEGIN INIT INFO
# processname:       node_exporter
# Short-Description: Exporter for machine metrics.
# Description:       Prometheus exporter for machine metrics,
#                    written in Go with pluggable metric collectors.
#
# chkconfig: 2345 80 80
# pidfile: {{ pid_path }}/node_exporter.pid
#
#
### END INIT INFO

#set -e

# Source function library.
. /etc/init.d/functions


NAME=node_exporter
DESC="Exporter for machine metrics"
DAEMON={{ nodeexporter_install_path }}/node_exporter
USER={{ prometheus_user }}
PID="{{ pid_path }}/nodeexporter/$NAME.pid"
LOG="{{ log_path }}/nodeexporter/$NAME.log"
GOSU=/usr/local/bin/gosu

DAEMON_OPTS='--web.listen-address=:{{nodeexporter_port }}
{% for collector_name,collector_setting in collectors_settings.items() %}
  --collector.{{ collector_name }}="{{ collector_setting }}"
{% endfor %}
  --collector.textfile.directory={{ collector_textfile_directory }}
  --web.telemetry-path={{ web_telemetry_path }}
  --log.level={{ log_level }}
{% for en_collector in enable_collectors %}
  --collector.{{ en_collector }}
{% endfor %}
{% for dis_collector in disable_collectors %}
  --no-collector.{{ dis_collector }} 
{% endfor %}'

RETVAL=0

# Check if DAEMON binary exist
[ -f $DAEMON ] || exit 0

service_checks() {
  # Prepare directories


  check_alive=`ps axf|grep ${DAEMON} | grep -v grep |wc -l`
  if [ "$check_alive" -ne 0 ]; then
    echo "Service already started"
    #exit 1
  else
    echo "Service stopped"
    if [ -f "$PID" ]; then
      rm -f "$PID"
    fi
  fi
}

start() {
  service_checks $1
  $GOSU $USER   $DAEMON $DAEMON_OPTS > $LOG 2>&1  &
  RETVAL=$?
  echo $! > $PID
}

stop() {
  killproc -p $PID -b $DAEMON  $NAME
  if [ -f $PID ]; then
    rm -rf $PID
  fi
  RETVAL=$?
}

reload() {
  stop
  start
}

case "$1" in
  start)
    start
    echo -n $"Starting $DESC -" "$NAME" $'\n'
    ;;

  stop)
    echo -n $"Stopping $DESC -" "$NAME" $'\n'
    stop
    ;;

  reload)
    echo -n $"Reloading $DESC configuration -" "$NAME" $'\n'
    reload
    ;;

  restart|force-reload)
    stop
    start
    echo -n $"Restarting $DESC -" "$NAME" $'\n'
    ;;

  syntax)
    $DAEMON --help
    ;;

  status)
    status -p $PID $DAEMON
    ;;

  *)
    echo -n $"Usage: /etc/init.d/$NAME {start|stop|reload|restart|force-reload|syntax|status}" $'\n'
    ;;
esac

exit $RETVAL
